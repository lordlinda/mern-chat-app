{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","_actions/chat_actions.js","components/views/ChatPage/sections/ChatCard.js","components/views/ChatPage/ChatPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/chat_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","LandingPage","className","style","fontSize","float","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","useState","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","width","Item","prefix","color","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","href","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","key","title","userData","status","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","getChats","a","res","ChatCard","author","sender","avatar","src","alt","content","message","substring","length","maxWidth","process","controls","datetime","format","createdAt","fromNow","connect","chats","chat","postMessage","chatMessage","setChatMessage","server","socket","io","reconnectionAttempts","timeout","transports","element","document","getElementById","on","messageFromBackEnd","scrollIntoView","block","behavior","submitChatMessage","e","preventDefault","emit","_id","userName","userImage","nowTime","Fragment","textAlign","margin","overflowY","scrollMarginBottom","map","clear","bottom","layout","onDrop","files","console","log","formData","FormData","append","header","url","getRootProps","getInputProps","target","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","ChatPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.361a6a40.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from \"./types\";\nimport { USER_SERVER } from \"../components/Config.js\";\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/register`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function loginUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/login`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(`${USER_SERVER}/auth`)\n    .then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios\n    .get(`${USER_SERVER}/logout`)\n    .then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n","export const LOGIN_USER = \"login_user\";\nexport const REGISTER_USER = \"register_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const LOGOUT_USER = \"logout_user\";\nexport const GET_CHATS = \"GET_CHATS\";\nexport const POST_MESSAGE = \"POST_MESSAGE\";\n","//SERVER ROUTES\nexport const USER_SERVER = \"/api/users\";\nexport const CHAT_SERVER = \"/api/chats\";\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\nimport { FaCode } from \"react-icons/fa\";\n\nfunction LandingPage() {\n    return (\n        <>\n            <div className=\"app\">\n                <FaCode style={{ fontSize: '4rem' }} /><br />\n                <span style={{ fontSize: '2rem' }}>Let's Start Coding!</span>\n            </div>\n            <div style={{ float: 'right' }}>Thanks For Using This Boiler Plate by John Ahn</div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport { Menu } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n\n      <SubMenu title={<span>Blogs</span>}>\n        <MenuItemGroup title=\"Item 1\">\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n        </MenuItemGroup>\n        <MenuItemGroup title=\"Item 2\">\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n        </MenuItemGroup>\n      </SubMenu>\n      <Menu.Item key=\"\">\n        <a href=\"/chat\">Chat</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import axios from \"axios\";\nimport { GET_CHATS, POST_MESSAGE } from \"./types\";\nimport { CHAT_SERVER } from \"../components/Config\";\n\nexport const getChats = async () => async (dispatch) => {\n  await axios.get(`${CHAT_SERVER}/getChats`).then((res) =>\n    dispatch({\n      type: GET_CHATS,\n      payload: res.data,\n    })\n  );\n};\n\nexport const postMessage = (post) => async (dispatch) => {\n  dispatch({\n    type: POST_MESSAGE,\n    payload: post,\n  });\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Tooltip, Avatar } from \"antd\";\n\nfunction ChatCard(props) {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Comment\n        author={props.sender?.name}\n        avatar={<Avatar src={props.sender?.image} alt={props.sender?.name} />}\n        content={\n          props.message.substring(0, 8) === \"uploads/\" ? (\n            // this will be either video or image\n\n            props.message?.substring(\n              props.message.length - 3,\n              props.message.length\n            ) === \"mp4\" ? (\n              <video\n                style={{ maxWidth: \"200px\" }}\n                src={`${process.env.REACT_APP_URL}${props.message}`}\n                alt=\"video\"\n                type=\"video/mp4\"\n                controls\n              />\n            ) : (\n              <img\n                style={{ maxWidth: \"200px\" }}\n                src={`${process.env.REACT_APP_URL}${props.message}`}\n                alt=\"img\"\n              />\n            )\n          ) : (\n            <p>{props?.message}</p>\n          )\n        }\n        datetime={\n          <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\n            <span>{moment(props?.createdAt).fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    </div>\n  );\n}\n\nexport default ChatCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Icon, Input, Button, Row, Col } from \"antd\";\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport Dropzone from \"react-dropzone\";\n\nimport { getChats, postMessage } from \"../../../_actions/chat_actions\";\nimport ChatCard from \"./sections/ChatCard\";\nimport axios from \"axios\";\nfunction ChatPage(props) {\n  const [chatMessage, setChatMessage] = useState(\"\");\n  let server = `${process.env.REACT_APP_URL}`;\n\n  //!this connectOptions is what prevents the cors errors so dont ever delete it\n\n  var connectionOptions = {\n    \"force new connection\": true,\n    reconnectionAttempts: \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\n    timeout: 10000, //before connect_error and connect_timeout are emitted.\n    transports: [\"websocket\"],\n  };\n  const socket = io(server, connectionOptions);\n  useEffect(() => {\n    var element = document.getElementById(\"scrollElement\");\n    var messages = document.getElementById(\"messages\");\n\n    props.getChats();\n\n    socket.on(\"Output Chat Message\", (messageFromBackEnd) => {\n      element.scrollIntoView({\n        block: \"start\",\n        behavior: \"smooth\",\n      });\n\n      props.postMessage(messageFromBackEnd);\n    });\n  }, []);\n\n  const handleSearchChange = (e) => {\n    setChatMessage(e.target.value);\n  };\n\n  const submitChatMessage = (e) => {\n    e.preventDefault();\n\n    socket.emit(\"Input Chat Message\", {\n      chatMessage,\n      userId: props.user.userData._id,\n      userName: props.user.userData.name,\n      userImage: props.user.userData.image,\n      nowTime: moment(),\n      type: \"Text\",\n    });\n    setChatMessage(\"\");\n  };\n  const onDrop = (files) => {\n    console.log(files);\n    if (props.user.userData && !props.user.userData.isAuth) {\n      return alert(\"Please Log in first\");\n    }\n\n    let formData = new FormData();\n\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    formData.append(\"file\", files[0]);\n\n    axios\n      .post(\n        `${process.env.REACT_APP_URL}api/chat/uploadfiles`,\n        formData,\n        config\n      )\n      .then((response) => {\n        if (response.data.success) {\n          console.log(\"sucess\");\n          socket.emit(\"Input Chat Message\", {\n            chatMessage: response.data.url,\n            userId: props.user.userData._id,\n            userName: props.user.userData.name,\n            userImage: props.user.userData.image,\n            nowTime: moment(),\n            type: \"VideoOrImage\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const renderCards = () =>\n    props.chats &&\n    props.chats.map((chat) => <ChatCard key={chat._id} {...chat} />);\n  return (\n    <div className=\"chatPage\">\n      <React.Fragment>\n        <div>\n          <p style={{ fontSize: \"2rem\", textAlign: \"center\" }}>\n            {\" \"}\n            Real Time Chat\n          </p>\n        </div>\n\n        <div style={{ maxWidth: \"800px\", margin: \"0 auto\" }}>\n          <div\n            className=\"infinite-container\"\n            id=\"messages\"\n            style={{ padding: \"20px\", overflowY: \"scroll\" }}\n          >\n            {props.chats && (\n              <div style={{ scrollMarginBottom: \"20px\" }}>{renderCards()}</div>\n            )}\n            <div\n              id=\"scrollElement\"\n              style={{\n                float: \"left\",\n                clear: \"both\",\n                padding: \"40px\",\n              }}\n            ></div>\n          </div>\n\n          <Row style={{ position: \"fixed\", bottom: \"0\", width: \"100%\" }}>\n            {props.chats ? (\n              <Form layout=\"inline\" onSubmit={submitChatMessage}>\n                <Col span={2}>\n                  <Dropzone onDrop={onDrop}>\n                    {({ getRootProps, getInputProps }) => (\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Button>\n                          <Icon type=\"upload\" />\n                        </Button>\n                      </div>\n                    )}\n                  </Dropzone>\n                </Col>\n                <Col span={19}>\n                  <Input\n                    id=\"message\"\n                    prefix={<Icon type=\"chat\" />}\n                    placeholder=\"Let's start talking\"\n                    type=\"text\"\n                    value={chatMessage}\n                    onChange={handleSearchChange}\n                  />\n                </Col>\n\n                <Col span={3}>\n                  <Button\n                    type=\"primary\"\n                    style={{ width: \"100%\" }}\n                    onClick={submitChatMessage}\n                    htmlType=\"submit\"\n                  >\n                    <Icon type=\"enter\" />\n                  </Button>\n                </Col>\n              </Form>\n            ) : (\n              <h2 style={{ padding: \"20px\" }}>Loading...</h2>\n            )}\n          </Row>\n        </div>\n      </React.Fragment>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    chats: state.chat.chats,\n  };\n};\nexport default connect(mapStateToProps, { getChats, postMessage })(ChatPage);\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport ChatPage from \"./views/ChatPage/ChatPage\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/chat\" component={Auth(ChatPage, null)} />\n        </Switch>\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user_reducer\";\nimport chat from \"./chat_reducer\";\n\nconst rootReducer = combineReducers({\n  user,\n  chat,\n});\n\nexport default rootReducer;\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import { GET_CHATS, POST_MESSAGE } from \"../_actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case GET_CHATS:\n      return { ...state, chats: action.payload };\n    case POST_MESSAGE:\n      return { ...state, chats: [...state.chats, action.payload] };\n\n    default:\n      return state;\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}